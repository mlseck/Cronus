@model Cronus.ViewModels.ApproverViewModel


@{
    ViewBag.Title = "ApproverIndex";
}

<h3>
    Approve hours for the time period ending @Html.DisplayFor(modelItem => Model.timeperiod.periodEndDate)
</h3>

@if(Model.employeetimeperiods.Count() != Model.Employees.Count())
{
@:
    <script type="text/javascript">alert('Employees do not have times recorded for this timeperiod')</script>
}
else
{
using (Html.BeginForm("ApproverIndex", "Approver"))
{


    //&nbsp;
    //&nbsp;


    <h2> </h2>

    @Html.HiddenFor(modelItem => modelItem.isApproved)

    <div class="demo">
        @{int i = 0;}

        @*@foreach (var employee in Model.Employees)*@
        @for (var j = 0; j < Model.Employees.Count; j++)
        {
            var employee = Model.Employees[j];

            @Html.HiddenFor(modelItem => modelItem.employeetimeperiods[j].Employee_employeeID)
            @*@Html.HiddenFor(modelItem => modelItem.employeetimeperiods[j].isApproved)*@
            @Html.HiddenFor(modelItem => modelItem.employeetimeperiods[j].TimePeriod_periodEndDate)

            @*@Html.HiddenFor(modelItem => modelItem.Employees[j].employeeID)
                @Html.HiddenFor(modelItem => modelItem.Employees[j].employeeLastName)
                @Html.HiddenFor(modelItem => modelItem.Employees[j].employeeFirstName)*@

            @*@Html.HiddenFor(modelItem => modelItem.Employees[j].employeetimeperiods.Select(e => e).Where(e => e.TimePeriod_periodEndDate == Model.timeperiod.periodEndDate).FirstOrDefault().Employee_employeeID)
                @Html.HiddenFor(modelItem => modelItem.Employees[j].employeetimeperiods.Select(e => e).Where(e => e.TimePeriod_periodEndDate == Model.timeperiod.periodEndDate).FirstOrDefault().TimePeriod_periodEndDate)*@



            @*<div class="panel-heading">
                        <strong>
                            @Html.DisplayFor(modelItem => employee.employeeFirstName) @Html.DisplayFor(modelItem => employee.employeeLastName)
                        </strong>
                    <div class="pull-right">
                            <label>Approved</label>
                            @Html.CheckBoxFor(modelItem => Model.timeperiod.isApprovedBool)
                    </div>
                </div>*@

            <h3 class="panel-title">
                <strong>
                    @Html.CheckBoxFor(modelItem => modelItem.employeetimeperiods[j].isApproved)   @Html.DisplayFor(modelItem => employee.employeeFirstName) @Html.DisplayFor(modelItem => employee.employeeLastName)
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    Total Hours:
                    @Html.Label(Model.HoursWorkedList.Select(e => e).Where(e => e.TimePeriod_employeeID == employee.employeeID && e.TimePeriod_periodEndDate == Model.timeperiod.periodEndDate).Sum(h => h.hours).ToString())
                </strong>
            </h3>


            <div class="panel panel-default">

                @foreach (var project in Model.Projects)
                {
                    @*<div id="accordion">*@

                    <div class="panel-group" id="accordion_@i">
                        <div class="panel panel-default" id="panel_@i">
                            <div class="panel-heading">
                                <h3 class="panel-title">
                                    <a data-toggle="collapse" data-target="#collapseOne_@i" href="#collapseOne_@i">
                                        --Project @Html.DisplayFor(modelItem => project.projectName)--
                                        @*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*@
                                        <div style="float:right">
                                            Total Project Hours:
                                            @Html.Label(Model.HoursWorkedList.Select(e => e).Where(e => e.TimePeriod_employeeID == employee.employeeID && e.Project_projectID == project.projectID && e.TimePeriod_periodEndDate == Model.timeperiod.periodEndDate).Sum(h => h.hours).ToString())
                                        </div>
                                    </a>
                                </h3>
                            </div>
                            <div id="collapseOne_@i" class="panel-collapse collapse">
                                <div class="panel-body">
                                    <table class="table table-hover">
                                        <tr>
                                            <th>
                                                @Html.Label("Activity Name")
                                            </th>
                                            <th>
                                                @Html.Label("Hours logged")
                                            </th>
                                            <th>
                                                @Html.Label("Comment")

                                            </th>
                                            <th>
                                                @Html.Label("Entry Date")
                                            </th>
                                        </tr>

                                        @foreach (var activity in project.activities)
                                        {
                                            var act = Model.HoursWorkedList.Select(e => e).Where(e => e.Activity_activityID == activity.activityID && e.Project_projectID == project.projectID && e.TimePeriod_employeeID == employee.employeeID && e.TimePeriod_periodEndDate == Model.timeperiod.periodEndDate);
                                            if (act != null && act.Count() != 0)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => activity.activityName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => act.FirstOrDefault().hours)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => act.FirstOrDefault().comments)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => act.FirstOrDefault().date)
                                                    </td>

                                                </tr>
                                            }

                                        }

                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    i++;
                }

            </div>



        }

        <div class="pull-right">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>


    </div>

            }


            }





@*@Scripts.Render("~/bundles/modalform")*@
