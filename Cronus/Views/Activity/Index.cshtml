@using Cronus.Helpers
@model IEnumerable<DatabaseEntities.activity>

@*@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.activityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.isCap)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.activityName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.isCap)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.activityID }) |
            @Html.ActionLink("Details", "Details", new { id=item.activityID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.activityID })
        </td>
    </tr>
}

</table>*@









<div class="panel panel-default">
    <div class="panel-heading">
        <strong>Address List</strong>
    </div>

    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.activityName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isCap)
            </th>
            <th>
                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "Create", "Activity", routeValues: new { ProjectID = ViewBag.ProjectID }, htmlAttributes: new { data_modal = "", @class = "btn btn-primary pull-right" })
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.activityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isCap)
                </td>
                <td>
                    <div class="pull-right">
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Edit", "Activity", routeValues: new { id = item.activityID }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                        &nbsp;
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "Delete", "Activity", routeValues: new { id = item.activityID }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })

                    </div>
                </td>
            </tr>
        }
    </table>

</div>

@* ! @Script.Render is not supported in partials - for extensions see: http://stackoverflow.com/a/13765578/209259

    @Scripts.Render("~/bundles/modalform")

*@

<script type="text/javascript">


    $(function () {
        $.ajaxSetup({ cache: false });

        $("a[data-modal]").on("click", function (e) {
            // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
            //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $('#replacetarget').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }
</script>

